<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="59763107-0c1a-4474-a647-d99778825873" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/argocd-app-config" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/kubernetes.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sun" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sun-kube-cluster" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ami-ec2.tf" beforeDir="false" afterPath="$PROJECT_DIR$/ami-ec2.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/argocd-app-config/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/argocd-app-config/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/argocd-app-config/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/argocd-app-config/application.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/argocd-app-config/dev/deployment.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/argocd-app-config/dev/deployment.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/argocd-app-config/dev/farmfresh.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/argocd-app-config/dev/farmfresh.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/dev/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/.terraform.lock.hcl" beforeDir="false" afterPath="$PROJECT_DIR$/dev/.terraform.lock.hcl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/LBapp.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/LBapp.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/banana.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/banana.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/basicpod.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/basicpod.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/deployment.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/deployment.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/initcontainer.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/initcontainer.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/main.tf" beforeDir="false" afterPath="$PROJECT_DIR$/dev/main.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multi-tier/mongodb.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multi-tier/mongodb.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multi-tier/pvc.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multi-tier/pvc.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multi-tier/secret.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multi-tier/secret.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multi-tier/storageclass.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multi-tier/storageclass.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multi-tier/webcon.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multi-tier/webcon.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multi-tier/webconwithsecret.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multi-tier/webconwithsecret.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/multicontainer.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/multicontainer.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/newIngressctrl.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/newIngressctrl.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/nodeport.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/nodeport.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/ns.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/ns.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/old-ingressctrl.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/old-ingressctrl.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/podnew.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/dev/podnew.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/provider.tf" beforeDir="false" afterPath="$PROJECT_DIR$/dev/provider.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/terraform.tfvars" beforeDir="false" afterPath="$PROJECT_DIR$/dev/terraform.tfvars" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev/variables.tf" beforeDir="false" afterPath="$PROJECT_DIR$/dev/variables.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/module/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/eks/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/module/eks/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/eks/eks.tf" beforeDir="false" afterPath="$PROJECT_DIR$/module/eks/eks.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/eks/iam.tf" beforeDir="false" afterPath="$PROJECT_DIR$/module/eks/iam.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/eks/nodegroup.tf" beforeDir="false" afterPath="$PROJECT_DIR$/module/eks/nodegroup.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/eks/variables.tf" beforeDir="false" afterPath="$PROJECT_DIR$/module/eks/variables.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/module/eks/vpc.tf" beforeDir="false" afterPath="$PROJECT_DIR$/module/eks/vpc.tf" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HU7q2lDzhi8oULYHkwBYQS2F24" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Sekar&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="59763107-0c1a-4474-a647-d99778825873" name="Changes" comment="" />
      <created>1668328006081</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668328006081</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>